// <auto-generated />
using System;
using BoraAli.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoraAli.Api.Migrations
{
    [DbContext(typeof(BoraAliContext))]
    [Migration("20230608124008_InserindoDado")]
    partial class InserindoDado
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BoraAli.Api.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<int>("PontoTuristicoId")
                        .HasColumnType("int");

                    b.Property<int>("RoteiroId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PontoTuristicoId");

                    b.HasIndex("RoteiroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Favorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PontosTuristicoId")
                        .HasColumnType("int");

                    b.Property<int>("QtdFavoritos")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PontosTuristicoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Favorito");
                });

            modelBuilder.Entity("BoraAli.Api.Models.HorarioFunc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("HorarioAbertura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HorarioFechamento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PontoTuristicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PontoTuristicoId");

                    b.ToTable("HorarioFunc");
                });

            modelBuilder.Entity("BoraAli.Api.Models.PontoTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("PontoTuristico");
                });

            modelBuilder.Entity("BoraAli.Api.Models.PrecoIngresso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PontoTuristicoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PontoTuristicoId");

                    b.ToTable("PrecoIngresso");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Premio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescricaoPremio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PontoTuristicoId")
                        .HasColumnType("int");

                    b.Property<int>("QtdPontos")
                        .HasColumnType("int");

                    b.Property<int>("ResgateId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PontoTuristicoId");

                    b.HasIndex("ResgateId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Premio");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Resgate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataResgate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("QtdItensResgatados")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Resgate");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Roteiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QtdPontosVisitados")
                        .HasColumnType("int");

                    b.Property<double>("TamanhoRota")
                        .HasColumnType("double");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Roteiro");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "victor@gmail.com",
                            Genero = "Masculino",
                            Idade = 22,
                            Nome = "Victor"
                        });
                });

            modelBuilder.Entity("BoraAli.Api.Models.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVisita")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PontoTuristicoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PontoTuristicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Visita");
                });

            modelBuilder.Entity("PontoTuristicoRoteiro", b =>
                {
                    b.Property<int>("PontoTuristicoId")
                        .HasColumnType("int");

                    b.Property<int>("RoteirosId")
                        .HasColumnType("int");

                    b.HasKey("PontoTuristicoId", "RoteirosId");

                    b.HasIndex("RoteirosId");

                    b.ToTable("PontoTuristicoRoteiro");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Avaliacao", b =>
                {
                    b.HasOne("BoraAli.Api.Models.PontoTuristico", "PontoTuristico")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("PontoTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoraAli.Api.Models.Roteiro", "Roteiro")
                        .WithMany("Avaliacao")
                        .HasForeignKey("RoteiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoraAli.Api.Models.Usuario", "Usuario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoTuristico");

                    b.Navigation("Roteiro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Favorito", b =>
                {
                    b.HasOne("BoraAli.Api.Models.PontoTuristico", "PontoTuristico")
                        .WithOne("Favorito")
                        .HasForeignKey("BoraAli.Api.Models.Favorito", "PontosTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoraAli.Api.Models.Usuario", "Usuario")
                        .WithMany("Favoritos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoTuristico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BoraAli.Api.Models.HorarioFunc", b =>
                {
                    b.HasOne("BoraAli.Api.Models.PontoTuristico", "PontoTuristico")
                        .WithMany("HorarioFuncs")
                        .HasForeignKey("PontoTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoTuristico");
                });

            modelBuilder.Entity("BoraAli.Api.Models.PontoTuristico", b =>
                {
                    b.HasOne("BoraAli.Api.Models.Categoria", "Categoria")
                        .WithMany("PontosTuristicos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BoraAli.Api.Models.PrecoIngresso", b =>
                {
                    b.HasOne("BoraAli.Api.Models.PontoTuristico", "PontoTuristico")
                        .WithMany("PrecoIngressos")
                        .HasForeignKey("PontoTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoTuristico");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Premio", b =>
                {
                    b.HasOne("BoraAli.Api.Models.PontoTuristico", "PontoTuristico")
                        .WithMany("Premios")
                        .HasForeignKey("PontoTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoraAli.Api.Models.Resgate", "Resgate")
                        .WithMany("Premios")
                        .HasForeignKey("ResgateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoraAli.Api.Models.Usuario", "Usuario")
                        .WithMany("Premio")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoTuristico");

                    b.Navigation("Resgate");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Resgate", b =>
                {
                    b.HasOne("BoraAli.Api.Models.Usuario", "Usuario")
                        .WithMany("Resgates")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Roteiro", b =>
                {
                    b.HasOne("BoraAli.Api.Models.Usuario", "Usuario")
                        .WithMany("Roteiros")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Visita", b =>
                {
                    b.HasOne("BoraAli.Api.Models.PontoTuristico", "PontoTuristico")
                        .WithMany("Visitas")
                        .HasForeignKey("PontoTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoraAli.Api.Models.Usuario", "Usuario")
                        .WithMany("Visitas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoTuristico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PontoTuristicoRoteiro", b =>
                {
                    b.HasOne("BoraAli.Api.Models.PontoTuristico", null)
                        .WithMany()
                        .HasForeignKey("PontoTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoraAli.Api.Models.Roteiro", null)
                        .WithMany()
                        .HasForeignKey("RoteirosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BoraAli.Api.Models.Categoria", b =>
                {
                    b.Navigation("PontosTuristicos");
                });

            modelBuilder.Entity("BoraAli.Api.Models.PontoTuristico", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Favorito")
                        .IsRequired();

                    b.Navigation("HorarioFuncs");

                    b.Navigation("PrecoIngressos");

                    b.Navigation("Premios");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Resgate", b =>
                {
                    b.Navigation("Premios");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Roteiro", b =>
                {
                    b.Navigation("Avaliacao");
                });

            modelBuilder.Entity("BoraAli.Api.Models.Usuario", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Favoritos");

                    b.Navigation("Premio");

                    b.Navigation("Resgates");

                    b.Navigation("Roteiros");

                    b.Navigation("Visitas");
                });
#pragma warning restore 612, 618
        }
    }
}
